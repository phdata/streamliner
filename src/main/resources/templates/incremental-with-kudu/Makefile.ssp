<%@ val configuration: io.phdata.pipewrench.configuration.Configuration %>
<%@ val table: io.phdata.pipewrench.configuration.TableDefinition %>
impala-cmd=${configuration.hadoop.impalaShellCommand} -f

archive-staging-data: archive-staging-data.sh
    ./run-with-logging.sh ./archive-staging-data.sh $@

compute-stats-archive: compute-stats-archive.sql
    $(impala-cmd) compute-stats-archive.sql

compute-stats-report: compute-stats-report.sql
    $(impala-cmd) compute-stats-report.sql

compute-stats-staging: compute-stats-staging.sql
    $(impala-cmd) compute-stats-staging.sql

copy-archive-avro-schema: copy-archive-avro-schema.sh
    ./run-with-logging.sh ./archive-staging-data.sh $@

copy-staging-avro-schema: copy-staging-avro-schema.sh
    ./run-with-logging.sh ./copy-staging-avro-schema.sh $@

create-archive-table: create-archive-table.sql
    $(impala-cmd) create-archive-table.sql

create-report-table: create-report-table.sql
    $(impala-cmd) create-report-table.sql

create-sqoop-job: create-sqoop-job.sh
    ./run-with-logging.sh ./create-sqoop-job.sh $@

create-staging-table: create-staging-table.sql
    $(impala-cmd) create-staging-table.sql

delete-archive-hdfs: delete-archive-hdfs.sh
    ./run-with-logging.sh ./delete-archive-hdfs.sh $@

delete-sqoop-job: delete-sqoop-job.sh
    ./run-with-logging.sh ./delete-sqoop-job.sh $@

delete-staging-hdfs: delete-staging-hdfs.sh
    ./run-with-logging.sh ./delete-staging-hdfs.sh $@

delete-generated-avro-schema:
    rm -rf AutoGeneratedSchema.avsc

drop-archive-table: drop-archive-table.sql
    $(impala-cmd) drop-archive-table.sql

drop-report-table: drop-report-table.sql
    $(impala-cmd) drop-report-table.sql

drop-staging-table: drop-staging-table.sql
    $(impala-cmd) drop-staging-table.sql

invalidate-metadata-archive: invalidate-metadata-archive.sql
    $(impala-cmd) invalidate-metadata-archive.sql

invalidate-metadata-staging: invalidate-metadata-staging.sql
    $(impala-cmd) invalidate-metadata-staging.sql

sqoop-job: sqoop-job.sh
    ./run-with-logging.sh ./sqoop-job.sh $@

upsert-report-table: upsert-report-table.sql
    $(impala-cmd) upsert-report-table.sql

first-run:
    $(MAKE) create-sqoop-job
    $(MAKE) sqoop-job
    $(MAKE) copy-archive-avro-schema
    $(MAKE) copy-staging-avro-schema
    $(MAKE) create-archive-table
    $(MAKE) create-reporting-table
    $(MAKE) create-staging-table
    $(MAKE) upsert

upsert:
    $(MAKE) compute-stats-staging
    $(MAKE) upsert-report-table
    $(MAKE) compute-stats-report

run:
    $(MAKE) archive-staging-data
    $(MAKE) invalidate-metadata-archive
    $(MAKE) compute-stats-archive
    $(MAKE) invalidate-metadata-staging
    $(MAKE) sqoop-job
    $(MAKE) copy-archive-avro-schema
    $(MAKE) copy-staging-avro-schema
    $(MAKE) upsert

clean:
    $(MAKE) delete-sqoop-job
    $(MAKE) drop-archive-table
    $(MAKE) drop-reporting-table
    $(MAKE) drop-staging-table
    $(MAKE) delete-archive-hdfs
    $(MAKE) delete-reporting-hdfs
    $(MAKE) delete-staging-hdfs
    $(MAKE) delete-generated-avro-schema

targets: ## Print out a list of available targets
    @fgrep -h ": " $(MAKEFILE_LIST) | fgrep -v fgrep | sed -e 's/\\$$//' | sed -e 's/:.*//'

help:  ## Print help message
    @fgrep -h "##" $(MAKEFILE_LIST) | fgrep -v fgrep | sed -e 's/\\$$//' | sed -e 's/##//'
